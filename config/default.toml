# Copy this file to local.toml to make changes for a version that git will ignore.

refresh_member_interval = 86400 # Number of seconds between automatic account data refresh of each member

[knex]
client = "sqlite3"
useNullAsDefault = true

[knex.connection]
filename = "./discord-bot.sqlite"

[graphql]
enabled = true # The bot will start a GraphQL API server
port = 4000
playground = false # When enabled you can visit the endpoint in a browser and directly send queries (you will need to set a discord oauth2 access token in the Authorization header)

[world]
id = 1017 # world member has to be on to get in role, and default world for wvw stuffs.
role = "" # Name of the role, leave blank if you don't want this

[guild]
id  = "" # Guild unique ID in format XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXX, this can be found at https://api.guildwars2.com/v2/guild/search?name=[guild name]
key = "" # API Key from top guild rank with the "guilds" permission
member_role = "" # Name of the role guild members go in
create_roles = true # Have the bot create roles for each rank.  If false, members will only be assigned to their rank role if it exists.
motd_channel = "" # Will set the channel description to the guild motd
motd_convert_urls = true # Convert urls in the guild motd to actual urls that discord parses to a link, if they don't start with e.g. "http://"
motd_excluded_subdomains = [ # An array of url subdomains of which the url should not be converted (these are regular expressions)
  "[^\\.]*ts[^\\.]*", # *ts*.example.com
  "[^\\.]*teamspeak[^\\.]*" # *teamspeak*.example.com
]

[discord]
clientid = "" # Used to generate a link to add the bot to a server
token = "" # Token for your discord bot user

[features]
language = "en"
# Add "web" to turn on the web server
enabled = ["ranks", "motd", "wvw_score", "progression", "builds", "wiki", "session", "whois", "li"]
